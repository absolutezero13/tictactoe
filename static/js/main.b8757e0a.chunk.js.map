{"version":3,"sources":["Components/Square.tsx","Components/Board.tsx","Helper/helper.ts","App.tsx","index.tsx"],"names":["Square","clickSquare","square","i","motion","div","onClick","style","borderRight","borderBottom","className","initial","x","animate","exit","useStyles","makeStyles","button","fontSize","fontWeight","color","fontFamily","Board","useState","Array","fill","squares","setSquares","activePlayer","setActivePlayer","roundWinner","setRoundWinner","roundNumber","setRoundNumber","player1Score","setPlayer1Score","player2Score","setPlayer2Score","gameWinner","setGameWinner","isDraw","setIsDraw","classes","useEffect","xOrO","won","length","y","z","isRoundOver","prevScore","aiMove","setTimeout","prevNum","reset","indexOf","id","prevSquares","map","randomNum","Math","floor","random","p","marginRight","Button","variant","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8757e0a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nconst Square: React.FC<any> = ({ clickSquare, square, i }) => {\r\n  return (\r\n    <motion.div\r\n      onClick={() => clickSquare(i)}\r\n      style={{\r\n        borderRight:\r\n          i === 8 || i === 5 || i === 2\r\n            ? \"none\"\r\n            : \"7px solid rgb(218, 208, 208)\",\r\n        borderBottom:\r\n          i === 6 || i === 7 || i === 8\r\n            ? \"none\"\r\n            : \"7px solid rgb(218, 208, 208)\",\r\n      }}\r\n      className=\"square\"\r\n      initial={{ x: -500 }}\r\n      animate={{ x: 0 }}\r\n      exit={{ x: -500 }}\r\n    >\r\n      {square}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { isRoundOver } from \"../Helper/helper\";\r\nimport Square from \"./Square\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    fontSize: \"1.6rem\",\r\n    fontWeight: 700,\r\n    color: \"rgb(78, 89, 235)\",\r\n    fontFamily: \"Quicksand\",\r\n  },\r\n});\r\n\r\nconst Board: React.FC = () => {\r\n  const [squares, setSquares] = useState(new Array(9).fill(\"\"));\r\n  const [activePlayer, setActivePlayer] = useState(\"Human\");\r\n  const [roundWinner, setRoundWinner] = useState<any>(\"\");\r\n  const [roundNumber, setRoundNumber] = useState<number>(1);\r\n  const [player1Score, setPlayer1Score] = useState<number>(0);\r\n  const [player2Score, setPlayer2Score] = useState<number>(0);\r\n  const [gameWinner, setGameWinner] = useState<string>(\"\");\r\n  const [isDraw, setIsDraw] = useState<boolean>(false);\r\n  const classes = useStyles();\r\n  // GAME END\r\n\r\n  useEffect(() => {\r\n    if (player2Score >= 3 || player1Score >= 3) {\r\n      player1Score > player2Score\r\n        ? setGameWinner(\"Human\")\r\n        : setGameWinner(\"Ai\");\r\n    }\r\n  }, [roundWinner]);\r\n\r\n  // ROUND END\r\n\r\n  useEffect(() => {\r\n    const xOrO = isRoundOver(squares);\r\n\r\n    if (xOrO && !roundWinner && !gameWinner) {\r\n      if (xOrO === \"X\") {\r\n        setPlayer1Score((prevScore) => prevScore + 1);\r\n      }\r\n      if (xOrO === \"O\") {\r\n        setPlayer2Score((prevScore) => prevScore + 1);\r\n      }\r\n      setRoundWinner(xOrO);\r\n    }\r\n  }, [squares]);\r\n\r\n  // Recursive AI move\r\n\r\n  useEffect(() => {\r\n    aiMove();\r\n  }, [activePlayer]);\r\n\r\n  // NEXT ROUND\r\n\r\n  useEffect(() => {\r\n    if (roundWinner && !gameWinner && player2Score < 3 && player1Score < 3) {\r\n      setTimeout(() => {\r\n        setRoundNumber((prevNum) => prevNum + 1);\r\n        reset();\r\n      }, 2000);\r\n    }\r\n  }, [roundWinner]);\r\n\r\n  // DRAW\r\n\r\n  useEffect(() => {\r\n    if (squares.indexOf(\"\") === -1 && !roundWinner) {\r\n      setIsDraw(true);\r\n      setTimeout(() => {\r\n        reset();\r\n      }, 2000);\r\n    }\r\n  }, [squares]);\r\n\r\n  //CLICK FUNC\r\n\r\n  const clickSquare = (id: number): void => {\r\n    if (\r\n      !squares[id] &&\r\n      !roundWinner &&\r\n      !gameWinner &&\r\n      activePlayer === \"Human\"\r\n    ) {\r\n      setSquares((prevSquares) => {\r\n        return prevSquares.map((square, i) => {\r\n          if (i === id) {\r\n            square = \"X\";\r\n          }\r\n          return square;\r\n        });\r\n      });\r\n      setActivePlayer(\"Ai\");\r\n    }\r\n  };\r\n\r\n  const aiMove = (): any => {\r\n    if (activePlayer === \"Ai\" && !roundWinner && !isDraw) {\r\n      const randomNum = Math.floor(Math.random() * 9);\r\n      if (squares[randomNum] === \"\") {\r\n        squares[randomNum] = \"O\";\r\n        setActivePlayer(\"Human\");\r\n      } else {\r\n        aiMove();\r\n      }\r\n    }\r\n  };\r\n\r\n  // ROUND RESET\r\n\r\n  const reset = () => {\r\n    setRoundWinner(\"\");\r\n    setSquares(new Array(9).fill(\"\"));\r\n    setActivePlayer(\"Human\");\r\n    setIsDraw(false);\r\n  };\r\n\r\n  // GAME RESET\r\n\r\n  const newGame = () => {\r\n    reset();\r\n    setRoundNumber(1);\r\n    setPlayer1Score(0);\r\n    setPlayer2Score(0);\r\n    setGameWinner(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <h2>Round {roundNumber}</h2>\r\n      <div className=\"board__score\">\r\n        <h1>Human </h1>\r\n        <div className=\"board__score__scores\">\r\n          <div className=\"board__score__scores__score\">\r\n            <p>{player1Score}</p>\r\n          </div>\r\n          -\r\n          <div className=\"board__score__scores__score\">\r\n            <p>{player2Score}</p>\r\n          </div>\r\n        </div>\r\n        <h1>Ai</h1>\r\n      </div>\r\n      <div className=\"board__game-field\">\r\n        {squares.map((square, i) => {\r\n          return (\r\n            <Square clickSquare={clickSquare} square={square} key={i} i={i} />\r\n          );\r\n        })}\r\n      </div>\r\n      <motion.p\r\n        style={{\r\n          marginRight: activePlayer === \"Human\" ? \"250px\" : \"-250px\",\r\n        }}\r\n        initial={{ x: -500 }}\r\n        animate={{ x: 0 }}\r\n        exit={{ x: -500 }}\r\n      >\r\n        {!roundWinner && activePlayer + \"'s turn\"}\r\n      </motion.p>\r\n      <p>\r\n        {roundWinner &&\r\n          !gameWinner &&\r\n          (roundWinner === \"X\"\r\n            ? \"Human Wins the Round\"\r\n            : roundWinner === \"O\"\r\n            ? \"Ai Wins the Round\"\r\n            : null)}\r\n      </p>\r\n      {isDraw && <p>Draw !</p>}\r\n      {gameWinner && <p> {gameWinner} won the Game </p>}\r\n\r\n      <Button variant=\"contained\" className={classes.button} onClick={newGame}>\r\n        NEW GAME\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","export const isRoundOver = (squares: String[]) => {\r\n  const won = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < won.length; i++) {\r\n    const [x, y, z] = won[i];\r\n    if (squares[x] && squares[x] === squares[y] && squares[y] === squares[z]) {\r\n      return squares[x];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","import React from \"react\";\nimport Board from \"./Components/Board\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./Sass/main.scss\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}